set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

# form vim/tmux d/y buffer sync
set -g focus-events

set -g prefix C-a
bind C-a send-prefix

setw -g clock-mode-colour cyan
set -g base-index 1
setw -g pane-base-index 1

set -g pane-border-style "fg=#202020,bg=#202020"
set -g pane-active-border-style "fg=#202020,bg=#202020"
# TODO: Find cool color to it
# set -g mode-style "bg=black"

set -g status on 
set -g status-style "bg=#202021,fg=#665c54"
set -g status-position top
set -g status-interval 1
# TODO: discover how to make this show date together with hour.
set -g status-left "%H:%M" 
set -g status-right "#(pomo) #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)"
set -g status-right-length 200
set -g status-justify centre

# highlight the name of current window
set-window-option -g window-status-current-style fg=yellow

set -sg escape-time 1          # shorten commands delay
set -g repeat-time 1000        # increase repeat time for repeatable cmds
set -g base-index 1            # counting windows from 1
set -g pane-base-index 1       # counting panes from 1
set -g renumber-windows on
set -g history-limit 999999999 # increase history limit
setw -g aggressive-resize off

# CLIPBOARD
set -g set-clipboard on

# --------- Bindings --------------
# source it
bind C-r source-file ~/.tmux.conf \; display-message "Reloaded!"

# add double-tap meta key to toggle last window
bind-key C-a last-window

# split panes
bind \\ split-window -h -c '#{pane_current_path}'
bind / split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# vi keys to resize
bind -n M-k resize-pane -U 1
bind -n M-j resize-pane -D 1
bind -n M-h resize-pane -L 1
bind -n M-l resize-pane -R 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# kill current pane
bind x kill-pane

# kill current window
bind & kill-window

# create new session
# TODO: find a good binding for this
bind g new

# kill tmux
bind C-x kill-server

# start selection on copy
set-window-option -g mode-keys vi
bind -r v copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# vi for command status
set -g status-keys vi
